{"changed":true,"filter":false,"title":"ValidatePostSize.php","tooltip":"/cms/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php","ace":{"folds":[],"scrolltop":683.5,"scrollleft":0,"selection":{"start":{"row":55,"column":0},"end":{"row":55,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":65,"mode":"ace/mode/php"}},"mime":"application/octet-stream","value":"<?php\n\nnamespace Illuminate\\Foundation\\Http\\Middleware;\n\nuse Closure;\nuse Illuminate\\Http\\Exceptions\\PostTooLargeException;\n\nclass ValidatePostSize\n{\n    /**\n     * Handle an incoming request.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\Closure  $next\n     * @return mixed\n     *\n     * @throws \\Illuminate\\Http\\Exceptions\\PostTooLargeException\n     */\n    public function handle($request, Closure $next)\n    {\n        $max = $this->getPostMaxSize();\n\n        if ($max > 0 && $request->server('CONTENT_LENGTH') > $max) {\n            throw new PostTooLargeException;\n        }\n\n        return $next($request);\n    }\n\n    /**\n     * Determine the server 'post_max_size' as bytes.\n     *\n     * @return int\n     */\n    protected function getPostMaxSize()\n    {\n        if (is_numeric($postMaxSize = ini_get('post_max_size'))) {\n            return (int) $postMaxSize;\n        }\n\n        $metric = strtoupper(substr($postMaxSize, -1));\n        $postMaxSize = (int) $postMaxSize;\n\n        switch ($metric) {\n            case 'K':\n                return $postMaxSize * 1024;\n            case 'M':\n                return $postMaxSize * 1048576;\n            case 'G':\n                return $postMaxSize * 1073741824;\n            default:\n                return $postMaxSize;\n        }\n    }\n}\n","undoManager":{"mark":5,"position":-1,"stack":[[{"start":{"row":49,"column":38},"end":{"row":49,"column":48},"action":"remove","lines":["1073741824"],"id":7},{"start":{"row":49,"column":38},"end":{"row":49,"column":48},"action":"insert","lines":["3000048576"]}],[{"start":{"row":47,"column":38},"end":{"row":47,"column":39},"action":"remove","lines":["1"],"id":7},{"start":{"row":47,"column":38},"end":{"row":47,"column":39},"action":"insert","lines":["3"]}],[{"start":{"row":47,"column":42},"end":{"row":47,"column":43},"action":"insert","lines":["0"],"id":8}],[{"start":{"row":47,"column":40},"end":{"row":47,"column":41},"action":"insert","lines":["0"],"id":9},{"start":{"row":47,"column":41},"end":{"row":47,"column":42},"action":"insert","lines":["0"]}],[{"start":{"row":47,"column":42},"end":{"row":47,"column":43},"action":"remove","lines":["０"],"id":10},{"start":{"row":47,"column":41},"end":{"row":47,"column":42},"action":"remove","lines":["０"]},{"start":{"row":47,"column":40},"end":{"row":47,"column":41},"action":"remove","lines":["０"]}],[{"start":{"row":47,"column":40},"end":{"row":47,"column":43},"action":"insert","lines":["０００"],"id":11}]]},"timestamp":1631427952462}